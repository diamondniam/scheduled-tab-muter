{"version":3,"file":"background.js","sources":["../src/background.ts"],"sourcesContent":["type WindowStore = {\n  createdAt: number;\n  data: Record<string, any>;\n};\n\nconst windowStores: Record<number, WindowStore> = {};\n\nchrome.windows.onRemoved.addListener((windowId) => {\n  delete windowStores[windowId];\n  saveStores();\n});\n\nchrome.alarms.onAlarm.addListener(async (alarm) => {\n  try {\n    const window = Number(alarm.name.split(\"_\")[1]);\n    const name = alarm.name.split(\"_\")[0];\n    console.log(\"alarm\", alarm, window, name);\n\n    if (!window) return;\n\n    const storage = (await chrome.storage.local.get(\"windowStores\"))[\n      \"windowStores\"\n    ];\n\n    console.log(\"storage\", storage);\n\n    if (!storage) {\n      console.error(\"No storage found\", window);\n      return;\n    }\n\n    if (!storage[window]) {\n      console.error(\"No storage for window found for window:\", window);\n      return;\n    }\n\n    const tabs = await chrome.tabs.query({ windowId: Number(window) });\n\n    if (!tabs) {\n      console.warn(\"No tabs found for window:\", window);\n      return;\n    }\n\n    const { from, to, domains } = storage[window].data;\n\n    if (!from || !to) {\n      console.error(\"No time found for window:\", window);\n      return;\n    }\n\n    if (!domains) {\n      console.error(\"No domains found for window:\", window);\n      return;\n    }\n\n    for (const tab of tabs) {\n      if (!tab.url || !tab.id) continue;\n\n      const matches = domains.some((site: string) => tab.url!.includes(site));\n      if (!matches) continue;\n\n      if (name === \"muteAlarm\" || name === \"instantMute\") {\n        console.log(\"muting tab\", tab.url);\n        await chrome.tabs.update(tab.id, { muted: true });\n      } else if (name === \"unmuteAlarm\" || name === \"instantUnmute\") {\n        console.log(\"unmuting tab\", tab.url);\n        await chrome.tabs.update(tab.id, { muted: false });\n      }\n    }\n  } catch (error) {\n    console.error(\"Error handling alarm:\", error);\n  }\n});\n\nfunction saveStores() {\n  chrome.storage.local.set({ windowStores }, () => {\n    console.log(\"Saved windowStores to storage\", windowStores);\n  });\n}\n\nchrome.runtime.onMessage.addListener((msg, _, sendResponse) => {\n  if (typeof msg.windowId === \"number\") {\n    if (msg.type === \"initStorage\") {\n      const { windowId } = msg;\n\n      if (!windowStores[windowId]) {\n        windowStores[windowId] = {\n          createdAt: Date.now(),\n          data: {},\n        };\n        saveStores();\n        console.log(\"store created\", windowId);\n      }\n\n      sendResponse({ status: \"ok\" });\n    }\n\n    if (msg.type === \"getStorage\") {\n      const { windowId } = msg;\n\n      windowStores[windowId].data;\n      sendResponse(windowStores[windowId].data || null);\n    }\n\n    if (msg.type === \"setStorage\") {\n      const { windowId, data, name } = msg;\n\n      if (windowStores[windowId]) {\n        windowStores[windowId].data[name] = data;\n        saveStores();\n        sendResponse({ status: \"ok\" });\n      } else {\n        sendResponse({ status: \"store_not_found\" });\n      }\n    }\n\n    if (msg.type === \"removeStorage\") {\n      const { windowId } = msg;\n      if (windowStores[windowId]) {\n        windowStores[windowId] = { createdAt: Date.now(), data: {} };\n        saveStores();\n        sendResponse({ status: \"ok\" });\n      } else {\n        sendResponse({ status: \"store_not_found\" });\n      }\n    }\n  }\n});\n"],"names":[],"mappings":"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"}